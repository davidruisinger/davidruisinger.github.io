import React from 'react'

interface BeardProps {
  top?: number
  left?: number
  opacity?: number
  state?: 'normal' | 'raised'
}

export const Beard: React.FunctionComponent<BeardProps> = ({
  left = 0,
  opacity = 1,
  state,
  top = 0,
}) => {
  const normal = React.useRef(null)
  const raised = React.useRef(null)

  React.useEffect(() => {
    switch (state) {
      case 'raised':
        return raised.current?.beginElement()
      case 'normal':
      default:
        return normal.current?.beginElement()
    }
  }, [state])

  return (
    <path
      d="M0.00192836238,0.00200457025 C2.69134776,8.0465762 2.60409382,17.7436599 3.10873305,26.10974 L3.23679525,28.0527807 C3.6893671,34.4649261 4.33507672,38.1496241 9.67389544,42.4752813 L9.98714306,42.7255735 C13.0277433,45.1220669 18.3459759,48.0580617 22.5344143,48.0262892 C26,48 25.5605505,48.7606078 29.1542444,45.5784392 C33.1107055,42.0756297 38.0221546,40.4787798 43.0005041,40.6117374 L43.96021,40.6464682 C45.9057212,40.6997939 51.2656444,40.6997939 60.0399795,40.6464682 L60.9996584,40.6117374 C65.9777204,40.4787798 70.8891695,42.0756297 74.8456306,45.5784392 C78.4393245,48.7606078 78,48 81.4657752,48.0262892 C85.5650978,48.057384 90.7376602,45.2911271 93.8153234,42.8806912 L94.3259636,42.4752813 C99.6625467,38.1512238 100.31027,34.4676515 100.762354,28.0598937 L100.890859,26.1096748 C101.38003,18.0043759 101.313396,8.64976752 103.754454,0.758965314 L103.998617,0 L104,35.7378722 C104,56.568476 91.8545052,74.5503659 74.2870392,82.93162 C66.8576866,86.31054 59.4286735,88 52,88 C44.5713265,88 37.1426493,86.3107003 29.7139686,82.9321008 C12.1459594,74.5510537 0,56.5688743 0,35.7378722 L0.00192836238,0.00200457025 Z M67.173992,51.8441788 C63.6727069,50.7186071 40.3269948,50.7186071 36.8257097,51.8441788 C33.5467905,52.8987685 32.7935106,54.5329978 32.6361743,55.841266 C32.1076094,60.2363386 33.0534564,63.0144085 36.3039472,66.2296032 C38.5721524,68.4731785 40.9790475,69.4836536 44.0268747,68.7777589 C44.5516462,68.6564025 46.6895484,67.337295 51.9998509,67.337295 C57.3101533,67.337295 59.4483565,68.6564025 59.9728271,68.7777589 C63.0206542,69.4836536 65.4273299,68.4731882 67.6957545,66.2296032 C70.9513986,63.0096088 71.8939772,60.2377178 71.3638283,55.841266 C71.2060956,54.53321 70.4529112,52.8987685 67.173992,51.8441788 Z"
      fill="#000000"
      fillOpacity={opacity}
      id="Beard"
      transform={`translate(${left}, ${top})`}
    >
      <animate
        attributeName="d"
        begin="indefinite"
        dur="100ms"
        fill="freeze"
        ref={normal}
        to="M0.00192836238,0.00200457025 C2.69134776,8.0465762 2.60409382,17.7436599 3.10873305,26.10974 L3.23679525,28.0527807 C3.6893671,34.4649261 4.33507672,38.1496241 9.67389544,42.4752813 L9.98714306,42.7255735 C13.0277433,45.1220669 18.3459759,48.0580617 22.5344143,48.0262892 C26,48 25.5605505,48.7606078 29.1542444,45.5784392 C33.1107055,42.0756297 38.0221546,40.4787798 43.0005041,40.6117374 L43.96021,40.6464682 C45.9057212,40.6997939 51.2656444,40.6997939 60.0399795,40.6464682 L60.9996584,40.6117374 C65.9777204,40.4787798 70.8891695,42.0756297 74.8456306,45.5784392 C78.4393245,48.7606078 78,48 81.4657752,48.0262892 C85.5650978,48.057384 90.7376602,45.2911271 93.8153234,42.8806912 L94.3259636,42.4752813 C99.6625467,38.1512238 100.31027,34.4676515 100.762354,28.0598937 L100.890859,26.1096748 C101.38003,18.0043759 101.313396,8.64976752 103.754454,0.758965314 L103.998617,0 L104,35.7378722 C104,56.568476 91.8545052,74.5503659 74.2870392,82.93162 C66.8576866,86.31054 59.4286735,88 52,88 C44.5713265,88 37.1426493,86.3107003 29.7139686,82.9321008 C12.1459594,74.5510537 0,56.5688743 0,35.7378722 L0.00192836238,0.00200457025 Z M67.173992,51.8441788 C63.6727069,50.7186071 40.3269948,50.7186071 36.8257097,51.8441788 C33.5467905,52.8987685 32.7935106,54.5329978 32.6361743,55.841266 C32.1076094,60.2363386 33.0534564,63.0144085 36.3039472,66.2296032 C38.5721524,68.4731785 40.9790475,69.4836536 44.0268747,68.7777589 C44.5516462,68.6564025 46.6895484,67.337295 51.9998509,67.337295 C57.3101533,67.337295 59.4483565,68.6564025 59.9728271,68.7777589 C63.0206542,69.4836536 65.4273299,68.4731882 67.6957545,66.2296032 C70.9513986,63.0096088 71.8939772,60.2377178 71.3638283,55.841266 C71.2060956,54.53321 70.4529112,52.8987685 67.173992,51.8441788 Z"
      />

      <animate
        attributeName="d"
        begin="indefinite"
        dur="100ms"
        fill="freeze"
        ref={raised}
        to="M0.00192836238,0.00200457025 C2.69134776,8.0465762 2.60409382,17.7436599 3.10873305,26.10974 L3.23679525,28.0527807 C3.6893671,34.4649261 4.33507672,38.1496241 9.67389544,42.4752813 L9.98714306,42.7255735 C13.0277433,45.1220669 18.5618245,49.1497813 22.5344143,48.0262892 C25.2690679,47.2529894 25.5605505,45.7606078 29.1542444,42.5784392 C33.1107055,39.0756297 38.0221546,37.4787798 43.0005041,37.6117374 L43.96021,37.6464682 C45.9057212,37.6997939 51.2656444,37.6997939 60.0399795,37.6464682 L60.9996584,37.6117374 C65.9777204,37.4787798 70.8891695,39.0756297 74.8456306,42.5784392 C78.4393245,45.7606078 78.7311216,47.2529894 81.4657752,48.0262892 C85.3538418,49.1258773 90.7376602,45.2911271 93.8153234,42.8806912 L94.3259636,42.4752813 C99.6625467,38.1512238 100.31027,34.4676515 100.762354,28.0598937 L100.890859,26.1096748 C101.38003,18.0043759 101.313396,8.64976752 103.754454,0.758965314 L103.998617,0 L104,35.7378722 C104,56.568476 91.8545052,74.5503659 74.2870392,82.93162 C66.8576866,86.31054 59.4286735,88 52,88 C44.5713265,88 37.1426493,86.3107003 29.7139686,82.9321008 C12.1459594,74.5510537 0,56.5688743 0,35.7378722 L0.00192836238,0.00200457025 Z M67.173992,47.8441788 C63.6727069,46.7186071 40.3269948,46.7186071 36.8257097,47.8441788 C33.5467905,48.8987685 31.744393,52.5319347 30.6361743,55.841266 C28.5097063,62.1903933 32.048604,68.0096088 36.3039472,72.2296032 C38.5676262,74.4742045 40.9790475,75.4836536 44.0268747,74.7777589 C44.5516462,74.6564025 46.6895484,71.337295 51.9998509,71.337295 C57.3101533,71.337295 59.4483565,74.6564025 59.9728271,74.7777589 C63.0206542,75.4836536 65.4320756,74.4742045 67.6957545,72.2296032 C71.9513986,68.0096088 75.4902964,62.1903933 73.3638283,55.841266 C72.2553087,52.5319347 70.4529112,48.8987685 67.173992,47.8441788 Z"
      />
    </path>
  )
}

interface MoustacheProps {
  top?: number
  left?: number
  opacity?: number
  state?: 'normal' | 'raised'
}

export const Moustache: React.FunctionComponent<MoustacheProps> = ({
  left = 0,
  opacity = 1,
  state,
  top = 0,
}) => {
  const normal = React.useRef(null)
  const raised = React.useRef(null)

  React.useEffect(() => {
    switch (state) {
      case 'raised':
        return raised.current?.beginElement()
      case 'normal':
      default:
        return normal.current?.beginElement()
    }
  }, [state])

  return (
    <path
      d="M29.48 10.283l-10.96.04-10.311-.04c-.758.007-1.246.027-1.464.038l-.042.002c-1.812.114-5.653 2.638-6.497 1.274-.91-1.474 1.198-7.452 6.2-10.385l.41-.23C7.37.685 8.821 0 11.543 0h24.912c2.827 0 4.283.74 4.789 1.015l.052.028c5.215 2.866 7.425 9.051 6.497 10.554-.82 1.326-4.474-1.023-6.342-1.259l-.155-.015c-.417-.026-4.356-.039-11.817-.04z"
      fill="#342920"
      fillOpacity={opacity}
      id="Moustache"
      transform={`translate(${left}, ${top})`}
    >
      <animateTransform
        attributeName="transform"
        begin="indefinite"
        dur="100ms"
        fill="freeze"
        from={`${left}, ${top - 5}`}
        ref={normal}
        to={`${left}, ${top}`}
        type="translate"
      />

      <animateTransform
        attributeName="transform"
        begin="indefinite"
        dur="100ms"
        fill="freeze"
        from={`${left}, ${top}`}
        ref={raised}
        to={`${left}, ${top - 5}`}
        type="translate"
      />
    </path>
  )
}
